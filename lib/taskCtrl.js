// Generated by CoffeeScript 1.9.3

/**
 * 任务并行控制
 * @author yy
 */
var async, gutil, taskCtrl;

async = require('async');

gutil = require('gulp-util');


/*任务控制类 */


/*
#param:
#num        number    任务数量
#saturated  function  监听：如果某次push操作后，任务数将达到或超过worker数量时，将调用该函数
#empty      function  监听：当最后一个任务交给worker时，将调用该函数
#drain      function  监听：当所有任务都执行完以后，将调用该函数
 */

taskCtrl = (function() {
  function taskCtrl(obj) {
    var _obj, drain, empty, num, queue, saturated;
    _obj = obj || {};
    num = obj.num || 5;
    saturated = obj.saturated || function() {};
    empty = obj.empty || function() {};
    drain = obj.drain || function() {};
    queue = this.init(num);
    queue.saturated = saturated;
    queue.empty = empty;
    queue.drain = drain;
    this.queue = queue;
  }

  taskCtrl.prototype.init = function(num) {
    var queue;
    return queue = async.queue(function(task, cb) {
      gutil.log("task:" + task.name + " run;wait:" + (queue.length()));
      return task.run(cb);
    }, num);
  };

  taskCtrl.prototype.add = function(obj, endFn) {
    var _endFn, _name, _obj, _task;
    _obj = obj || {};
    _name = _obj.name || '';
    _task = _obj.task || function() {};
    _endFn = endFn || function() {};
    return this.queue.push({
      name: _name,
      run: function(cb) {
        return _task(cb);
      }
    }, function(err) {
      return _endFn(err);
    });
  };

  return taskCtrl;

})();

module.exports = taskCtrl;
