// Generated by CoffeeScript 1.9.3

/**
 * 模块缓存
 * @author yy
 */
var Buffer, _, _hashFile, _oldHash, butil, config, e, exports, fs, md5, path;

config = require('./config');

butil = require('./butil');

fs = require('fs');

path = require('path');

_ = require('lodash');

Buffer = require("buffer").Buffer;

md5 = butil.md5;

_oldHash = {};

_hashFile = path.join(config.mapPath, config.jsHash);

if (!fs.existsSync(_hashFile)) {
  fs.writeFileSync(_hashFile, '{}', 'utf8');
}

try {
  _oldHash = JSON.parse(fs.readFileSync(_hashFile, 'utf8'));
} catch (_error) {
  e = _error;
}

exports = {
  _cache: {},
  _hash: _oldHash,
  checkHash: function(id, source) {
    var _flag, _md5, buf, str;
    buf = new Buffer(source);
    str = buf.toString("binary");
    _md5 = md5(str);
    _flag = false;
    if (this._hash[id] && this._hash[id] === _md5) {
      _flag = true;
    } else {
      this._hash[id] = _md5;
    }
    return _flag;
  },
  saveHash: function() {
    var jsonData;
    jsonData = JSON.stringify(this._hash, null, 2);
    return fs.writeFileSync(_hashFile, jsonData, 'utf8');
  },
  _readCache: function(id) {
    return this._cache[id];
  },
  _saveCache: function(id, source) {
    this._cache[id] = source;
    return this._cache;
  }
};

module.exports = exports;
