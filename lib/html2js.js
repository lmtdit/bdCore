// Generated by CoffeeScript 1.9.1

/**
 * html to AMD module js function
 * @date 2015-02-14 15:36:39
 * @author pjg <iampjg@gmail.com>
 * @link http://pjg.pw
 * @version $Id$
 */
var _, config, cssBgMap, e, fs, imgRoot, path;

fs = require('fs');

path = require('path');

_ = require('lodash');

config = require('../config');

cssBgMap = {};

try {
  cssBgMap = JSON.parse(fs.readFileSync(path.join(config.mapPath, config.cssBgMap), 'utf8'));
} catch (_error) {
  e = _error;
}

imgRoot = config.staticRoot + config.imgDistPath.replace('../', '');

module.exports = function(folder, cb) {
  var _tplPath, tplData, tpl_soure;
  cb = cb || function() {};
  if (folder.indexOf('.') === 0 || folder === "") {
    return false;
  }
  _tplPath = config.tplSrcPath + folder;
  tplData = {};
  fs.readdirSync(_tplPath).forEach(function(file) {
    var _file_path, _soure, file_name, file_soure, imgReg;
    _file_path = path.join(_tplPath, file);
    if (fs.statSync(_file_path).isFile() && file.indexOf('.html') !== -1 && file.indexOf('.') !== 0) {
      file_name = file.replace('.html', '');
      imgReg = /<img\s[^(src)]*\s*src="([^"]*)"/g;
      _soure = fs.readFileSync(_file_path, 'utf8');
      file_soure = _soure.replace(imgReg, function(str, map) {
        var key, val;
        if (map.indexOf('http://') !== -1 || map.indexOf('data:') !== -1) {
          return str;
        } else {
          key = map.replace('_img/', '').replace(/(^\'|\")|(\'|\"$)/g, '');
          val = imgRoot + (_.has(cssBgMap, key) ? cssBgMap[key].distname : key + '?=t' + String(new Date().getTime()).substr(0, 8));
          return str.replace(map, val);
        }
      });
      file_soure = file_soure.replace(/<!--([\s\S]*?)-->/g, '').replace(/\n/g, '').replace(/\t/g, '').replace(/\r/g, '').replace(/\s+/g, ' ').replace(/>([\n\s+]*?)</g, '><');
      if (file.indexOf('_') === 0) {
        return tplData[file_name] = "<script id=\"tpl_" + folder + file_name + "\" type=\"smcore\">" + file_soure + "</script>";
      } else {
        return tplData[file_name] = file_soure;
      }
    }
  });
  tpl_soure = "define(function(){return " + (JSON.stringify(tplData)) + ";});";
  fs.writeFileSync(path.join(config.tplOutPath, folder + '.js'), tpl_soure, 'utf8');
  return cb();
};
